# .
# This file is merged from the files in the following folder:
# .
# https://github.com/elBukkit/MagicPlugin/tree/master/Magic/src/main/resources/defaults/config
# .
# To edit this configuration with the web editor, use
# /mconfig editor
# .
# This turns on the survival configs by default.
# .
# Use
# /mconfig example set
# to turn them off.
# .
# NOTE: Any changes made with the mconfig configure or example commands
# will override any edits made to this file.
# .

example: survival
# This disables all interaction with an anvil
disable_anvil: false

# Turn off renaming wands on an anvil
enable_wand_renaming: true

# Allow combining enchanted books with an (unenchanted but enchantable) wand
enable_wand_book_combining: true

# Disable book combining with vanilla items
disable_book_combining: false
# This can be used to automatically turn items of a specific type into wands when held
# e.g.
# auto_wands:
#   stick: wand
auto_wands: {}
# This is used to convert a block to an item, for cases where
# the materials for each differ. (Example: skulls, doors)
block_items:
  skull: skull_item
  wall_banner: banner
  standing_banner: banner
  wooden_door: wood_door
  iron_door_block: iron_door
  wall_sign: sign
  sign_post: sign
  acacia_door: acacia_door_item
  jungle_door: jungle_door_item
  dark_oak_door: dark_oak_door_item
  birch_door: birch_door_item
  spruce_door: spruce_door_item
  skeleton_wall_skull: skeleton_skull
  wither_skeleton_wall_skull: wither_skeleton_skull
  creeper_wall_head: creeper_head
  dragon_wall_head: dragon_head
  player_wall_head: player_head
  zombie_wall_head: zombie_head

# These are player skins that represent blocks. Some are provided here
# as official Mojang skins, but more can be added.
block_skins:
  bookshelf: MHF_Bookshelf
  cactus: MHF_Cactus
  cake: MHF_Cake
  chest: MHF_Chest
  command_block: MHF_Command
  magma_block: MHF_Magma
  melon: MHF_Melon
  oak_log: MHF_OakLog
  pumpkin: MHF_Pumpkin
  purpur_block: MHF_Purpur
  redstone_block: MHF_Redstone
  stone: MHF_Stone
  tnt: MHF_TNT # There is also MHF_TNT2 but we aren't using it now.

  # For pre-1.13 versions
  log: MHF_OakLog
  magma: MHF_Magma
  melon_block: MHF_Melon

  # Other MHF blocks we don't use:
  # MHF_ArrowUp
  # MHF_ArrowDown
  # MHF_ArrowLeft
  # MHF_ArrowRight
  # MHF_Exclamation
  # MHF_Question
# What container types wands can not be put in.
# Note that these refer to Bukkit API InventoryType enums, not necessarily the same as a block or Material name.
# If you don't want players to be able to put wands in their ender chest, you can add ender_chest to this list.
unstashable_containers:
  - chest
  - furnace
  - hopper
  - dispenser
  - dropper
  - shulker_box
  - barrel
  - smoker
  - blast_furnace
#
# Special materials used to represent icons in the material brush system
#

# Default disabled icon url. Set to "" to turn off disabled icons, or override on a per-spell basis.
disabled_icon_url: http://textures.minecraft.net/texture/1c28376acb23cd93322c0a5d569b48b7cd631a6d65dd4f226adb9e9dd7e5c

# Represents erase (fill with air)
erase_item: brick{CustomModelData:18001}
legacy_erase_item: diamond_axe:1
erase_icon_url: http://textures.minecraft.net/texture/da486c55dfcb8d3f1e38e05ec924c7952811851869d9d92df236a313370ceb1
erase_brush_enabled: true

# Represents copy (fill with the target material)
copy_item: netherite_scrap{CustomModelData:18001}
legacy_copy_item: diamond_axe:2
copy_icon_url: http://textures.minecraft.net/texture/13e19c4f02f72d16191c1647c5e7cbd79974e642cd3458f553648632893cb9
copy_brush_enabled: true

# Clone will copy the area you are standing in when the clone material is activated
clone_item: repeater{CustomModelData:18001}
legacy_clone_item: diamond_axe:3
clone_icon_url: http://textures.minecraft.net/texture/b635f01b8b4cd9f44436154be3dd5d735e4487617089d3dadda39b4dada14
clone_brush_enabled: true

# Replicate works like clone, but will sample a moving area, allowing you to "paint"
# in a section of the world across multiple spell casts.
replicate_item: comparator{CustomModelData:18001}
legacy_replicate_item: diamond_axe:4
replicate_icon_url: http://textures.minecraft.net/texture/f92839237f03534717246a81656961781a8a79e8f6497bcfd2894fb16ad14d
replicate_brush_enabled: true

# The map material brush will fill in blocks from the last Map item you held. (Pixel art)
# It will use stained clay, wool or stained glass. The default is stained clay, but it will
# use one of the other types if it was the last material on your brush.
map_item: filled_map{CustomModelData:18001}
legacy_map_item: diamond_axe:5
map_icon_url: http://textures.minecraft.net/texture/c36adcbe21b520b7355936c89cd2b335ca5318e68173eaaa82e62f5fb986
map_brush_enabled: true

# The schematic material brush can be used (if WorldEdit is present) to construct with
# schematic files
schematic_item: cyan_banner{CustomModelData:18001}
legacy_schematic_item: diamond_axe:6
schematic_icon_url: http://textures.minecraft.net/texture/6eb68dc909b12ef5fb397c23fdecbc416d9a76825170c106b1faeb97b4749
schematic_brush_enabled: true

# This icon will be used for any material that fails to create as an item
default_brush_item: warped_sign{CustomModelData:18003}
legacy_default_brush_item: diamond_axe:7
default_brush_icon_url: http://textures.minecraft.net/texture/5163dafac1d91a8c91db576caac784336791a6e18d8f7f62778fc47bf146b6

# Use this for block types that Minecraft won't allow in an inventory (lava, water)
# or for blocks that have been replaced in the resource pack (monster eggs)
brush_replacements:
  lava: lava_bucket
  stationary_lava: lava_bucket
  water: water_bucket
  stationary_water: water_bucket
  monster_eggs|0: stone
  monster_eggs|1: cobblestone
  monster_eggs|2: smooth_brick
  monster_eggs|3: smooth_brick:1
  monster_eggs|4: smooth_brick:2
  monster_eggs|5: smooth_brick:3
  fire: flint_and_steel
  flower_pot: flower_pot_item
  iron_door_block: iron_door
  wooden_door: wood_door
  spruce_door: spruce_door_item
  birch_door: birch_door_item
  acacia_door: acacia_door_item
  jungle_door: jungle_door_item
  dark_oak_door: dark_oak_door_item
  carrot: carrot_item
  potato: potato_item
  frosted_ice: ice
  black_wall_banner: black_banner
  blue_wall_banner: blue_banner
  brown_wall_banner: brown_banner
  cyan_wall_banner: cyan_banner
  gray_wall_banner: gray_banner
  green_wall_banner: green_banner
  light_blue_wall_banner: light_blue_banner
  light_gray_wall_banner: light_gray_banner
  lime_wall_banner: lime_banner
  magenta_wall_banner: magenta_banner
  orange_wall_banner: orange_banner
  pink_wall_banner: pink_banner
  purple_wall_banner: purple_banner
  red_wall_banner: red_banner
  white_wall_banner: white_banner
  yellow_wall_banner: yellow_banner

#
# Here you can specify custom damage types.
# There are several builtin damage types that correspond to vanilla damage sources. You can add your own types, for
# use in protection and damage bonuses, and by the Damage action damage_type parameter.
#
# For each damage type you can specify a max reduction % allowed. This is by how much damage is reduced for a player
# that has maxed out protection for that source.
#
# You can also specify max_strength- this is the damage multiplier that an attacker will receive if they have a "strength"
# of 1.
#
# And max_weakness is the damage multiplier that a defender will receive if they have a "weakness" of 1.
#
# For instance, if you have fire damage set to max_reduction of 0.5, a player with a protection.fire of 1.0 (100%, maxed out)
# will take 50% damage from all fire sources. A player with protection.fire of 0.5 will take 25% damage.
#
# Protection will never be allowed to go above 100% of the values specified here. Even if using stacking items, if a player
# has armor with protection.fire of 0.7 and holding a wand with protection.fire of 0.5, they will stack but cap at 1.0
#
# However, "overall" protection does stack with the other amounts, so take care with that. If the protection values
# add up to over 1.0 the player is completely immune to that type of damage.
#
# The "overall" type is special, it applies to the "overall" protection which will be used for any type of damage.
#
damage_types:
  overall:
    max_reduction: 0.2
    max_strength: 5
    max_weakness: 10
  explosion:
    max_reduction: 0.2
    max_strength: 5
    max_weakness: 10
  fall:
    max_reduction: 1.0
    max_strength: 5
    max_weakness: 10
  fire:
    max_reduction: 0.5
    max_strength: 5
    max_weakness: 10
  physical:
    max_reduction: 0.6
    max_strength: 5
    max_weakness: 10
  projectile:
    max_reduction: 0.2
    max_strength: 5
    max_weakness: 10
  magic:
    max_reduction: 0.5
    max_strength: 5
    max_weakness: 10
  entity_sweep_attack:
    max_reduction: 1.0
    max_strength: 5
    max_weakness: 10
  drowning:
    max_reduction: 1.0
    max_strength: 5
    max_weakness: 10
  lightning:
    max_reduction: 1.0
    max_strength: 5
    max_weakness: 10
  hot_floor:
    max_reduction: 1.0
    max_strength: 5
    max_weakness: 10
  suffocation:
    max_reduction: 1.0
    max_strength: 5
    max_weakness: 10
  cramming:
    max_reduction: 1.0
    max_strength: 5
    max_weakness: 10
  thorns:
    max_reduction: 1.0
    max_strength: 5
    max_weakness: 10
  starve:
    max_reduction: 1.0
    max_strength: 5
    max_weakness: 10
  fly_into_wall:
    max_reduction: 1.0
    max_strength: 5
    max_weakness: 10
  melting:
    max_reduction: 1.0
    max_strength: 5
    max_weakness: 10
  out_of_world:
    max_reduction: 1.0
    max_strength: 5
    max_weakness: 10
  poison:
    max_reduction: 1.0
    max_strength: 5
    max_weakness: 10
  wither:
    max_reduction: 1.0
    max_strength: 5
    max_weakness: 10


# Use this to provide your own mechanism for saving player data, or select a builtin mechanism.
# The default data store uses yaml files stored in the plugin's data folder
# This migration_folder is where data files are moved to when migrating to a new data store.
player_data_store:
  class: Yaml
  folder: data/players
  migration_folder: data/migrated

# Use this to migrate your Yaml data to your new storage mechanism.
# When this is set, server operators will be prompted to use "/magic migrate" in-game
# to perform player data migration.
# It is best to not have any players on the server while migration is happening!
# Once migration is complete, you can remove this config.
#
# migrate_data_store:
#   class: Yaml
#   folder: data/players

# Switch to SQLite data storage (make sure to comment out or migrate from the above defaults!)
# The database name is optional, and will default to players
# This file gets saved in plugins/Magic/data/<database>.sqlite
#
# player_data_store:
#   class: SQLite
#   database: players

# Switch to MySQL data storage (make sure to comment out or migrate from the above defaults!)
# All parameters are optional, though you will hopefully need to at least specify
# the user and password.
#
# player_data_store:
#   class: MySQL
#   database: magic
#   host: localhost
#   port: 3306
#   user: minecraft
#   password: somethingsecure

# Switch to Postgres data storage (make sure to comment out or migrate from the above defaults!)
# All parameters are optional, though you will hopefully need to at least specify
# the user and password.
#
# player_data_store:
#   class: PostresSQL
#   database: magic
#   host: localhost
#   port: 3306
#   user: minecraft
#   password: somethingsecure

# Auto-save interval in milliseconds (default is 10 minutes, 0 to disable)
auto_save: 600000

# Can be used to turn off saving player data entirely
save_player_data: true

# If player data saving is off, you can use this to still have mages expect their data to load
external_player_data: false
# This can be used to turn off loading all of the default configs
# This is the same as setting all of the following "load_default_*" to false.
load_default_configs: true

# This is used by example configs to extend survival but disable the survival configs
disable_inherited: []

# Set to false to skip loading defaults/spells.defaults.yml entirely.
# Use this if you want a completely customized configuration.
# You will only have your custom spells, and will not get any new spells when you update.
# You will need to do the same with wands, since they refer to the default spells.
load_default_spells: true

# Use this to load, but disable the default spells.
# This is useful if you want to inherit from the defaults, or choose what to expose.
disable_default_spells: false

# Set to false to skip loading defaults/wands.defaults.yml entirely.
# Use this to have completely custom wands, and avoid getting updates to wands
# in the future.
load_default_wands: true

# Use this to load, but disable the default wands.
# This is useful if you want to inherit from the defaults, or choose what to expose.
disable_default_wands: false

# Set to false to skip loading defaults/paths.defaults.yml entirely.
load_default_paths: true

# Set to false to skip loading defaults/classes.defaults.yml entirely.
load_default_classes: true

# Set to false to skip loading defaults/attributes.defaults.yml entirely.
load_default_attributes: true

# Set to false to skip loading defaults/crafting.defaults.yml entirely.
load_default_crafting: true

# Set to false to skip loading defaults/mobs.defaults.yml entirely.
load_default_mobs: true

# Set to false to skip loading defaults/items.defaults.yml entirely.
load_default_items: true

# Set to false to skip loading defaults/automata.defaults.yml entirely.
load_default_automata: true

# Set to false to skip loading defaults/effects.defaults.yml entirely.
load_default_effects: true

# A class to use with the /mage command when a player doesn't yet have a class assigned
# default_mage_class: mage
default_mage_class: ""

# Give new players a wand when they join.
# e.g. welcome_wand: wand
# This is no longer the best way to do this, it's more flexible to add a starter kit via the kits
# configuration.
welcome_wand: ""

# Whether or not to show any messages (in chat)
show_messages: true

# Whether or not to show messages on every spell cast (in chat)
show_cast_messages: true

# Changes log verbosity- set to a higher number (like 10) if you're having issues
# with Magic, the extra log info may help me find problems.
log_verbosity: 0

# Use this to turn off colored error and warning messages
colored_logs: true

# Prevent rapid sending of chat messages from the plugin (in milliseconds)
message_throttle: 500

# A prefix to use for any important messages
message_prefix: "&d&o"

# A prefix to use for cast messages
# This and the above (and any message in messages.yml) support two special prefixes:
# a: send as an action bar message
# t: send as a title (with default fade in/out timing)
cast_message_prefix: "a:&5&o"

# How to format the range display in spell lore
range_formatter: "0.#"

# How to format partial seconds in spell lore
moment_seconds_formatter: "0.#"

# How to format other duration values
moment_milliseconds_formatter: "0"
seconds_formatter: "0"
minutes_formatter: "0"
hours_formatter: "0"

# Enable/Disable Sound Effects
sounds: true

# Whether wands can be crafted on a crafting table
enable_crafting: true

# Whether or not wands can be used as crafting ingredients
allow_wands_as_ingredients: true

# NOTE: If you disable spell upgrades, you probably also want to nerf magic missile's SP
# earn rate, assuming you still have that spell enabled. Add this to spells.yml (not commented out)
# missile:
#   earns_cooldown: 900000

# Enable spell upgrades. Turning this off will make all of the upgraded spells
# unobtainable.
enable_spell_upgrades: true

# Enable spell progression. Turning this off will make any spells with progress
# levels always function as if their progress level is 1
enable_spell_progression: true

# Automatically upgrades spells based on cast count
enable_automatic_spell_upgrades: true

# Automatically upgrade wand paths when a spell upgrades or progresses
enable_automatic_path_upgrades: true

# Set this to 1 to just turn costs off, or you can use it to scale costs down.
cost_reduction: 0.0

# Disabling cooldowns is not a great idea. I generally only put cooldowns on spells
# that can hurt the server via spamming- as in by creating too many entities or explosions.
cooldown_reduction: 0.0

# Whether or not to respect cooldowns and costs when casting from the console or command blocks.

# By default console and command block casting skips costs but still respects cooldowns.

# From a command block
cast_command_cost_free: true
cast_command_cooldown_free: false

# From NPCs, /cast commands or other console-routed places
cast_console_cost_free: true
cast_console_cooldown_free: false

# Whether or not to respect wand power for the held wand when using /cast
# Set the to 1.0 to use normal wand power, 0.0 to ignore wand power.
cast_command_power_multiplier: 0.0
cast_console_power_multiplier: 0.0

# Whether to give feedback to console senders using cast and castp
cast_console_feedback: false

# Whether the console and command blocks act SuperPowered
# This lets them bypass indestructible materials, rollback any players'
# spell and a few other things
command_block_superpowered: true
console_superpowered: true

# Set this to 0 to disable BStats metrics collection
metrics_level: 5

# Set this to a non-zero value to remove common ground items more quickly.
#
# This value is in milliseconds, for consistency with other Magic duration values.
# The default live time is 6000 ticks, which is 300000ms.  (300 seconds, 5 minutes)
# So to make items lived for only a second, use 299000.
# To make items live for 1 minute, use 240000. (300000 - 60 * 1000)
# Mathmatical!
#
age_dropped_items: 0

#
# Wand configuration
#

#
# Wand data key
# WARNING - changing this will cause all wands to deactivate permanently.
#
# This controls the root NBT tag used to store wand data on items.
#
wand_key: "wand"
wand_upgrade_key: "wand_upgrade"

#
# Wand destruction key
# This can be used to cause old wands to self-destruct.
#
# If changing the above intentionally to "reset Magic", you way
# also want to change this to "wand" to cause all of the old reset
# wands to self-destruct, rather than staying around as inert items.
#
# They will self-destruct when held, with a configurable message (see messages.yml, wand.self_destruct)
#
wand_self_destruct_key: ""

# Wand appearance, used when no icon is specified in a wand template config
wand_item: stick
wand_upgrade_item: stick

# Wand FX locations, change to move from where spell casts appear to originate
wand_location_offset: 0.5
wand_location_offset_vertical: 0

# Set this to true to make wands "Unbreakable", regardless of the indestructible property
wand_unbreakable: false

# Set this to false to allow players to put wands in chests.
# The Magic.wand.override_stash permission also allows players to override this setting.
# Wands are droppable and stashable normally unless they are set to "undroppable: true"
# The "unstashable" property can also be set per-wand instead of using this global setting.
wand_unstashable: false

# Skill configuration
default_skill_icon: stick
default_spell_icon: ender_pearl
skill_inventory_max_rows: 6
mskills_spell: skills

# Control word-wrapping in various lore texts
lore_wrap_limit: 48

# This will hide all flags on a wand.
# If you want enchantments to show, use
# wand_hide_flags: 62
# See: http://minecraft.gamepedia.com/Tutorials/Command_NBT_Tags
wand_hide_flags: 63

# Set this to true to turn on material brush glow.
brush_glow: false
brush_item_glow: true

# Set this to true to turn on spell glow. This will apply a hidden luck enchantment to spells.
spell_glow: false

# Set this to have the hotbar show what spells are castable
live_hotbar: true

# Set this to use item amounts as a cooldown countdown timer
live_hotbar_cooldown: true

# Set this to incorporate mana costs in the cooldown countdown timer
live_hotbar_mana: true

# Set this to false to turn off cooldown timers on skills
# This involves scanning players' hotbars all the time, even
# when not holding an active wand.
# There may be a performance hit to this, but hopefully not much. If you
# don't use Heroes integration, the skill selector or spell book you can turn this off.
live_hotbar_skills: true

# Turn this off if you want to use Command actions that do damage
# Magic will normally block this, preventing melee damage from wands and
# allow spells casts from an entity hit (without potentially going into
# an infinite loop of damage+cast)
prevent_wand_melee_damage: true

# Turn this on if you don't want players to be able to deal damage
# other than with a wand, or items listed in the "melee" list in materials.yml
# By default, swords are still allowed.
# Has no effect if prevent_wand_melee_damage is set to false
prevent_melee_damage: false

# A value above 0 here will reduce melee damage from any weapon globally.
# A value of 1 or higher will completely disable all melee damage.
melee_damage_reduction: 0

# You can make a map here of entity (including projectiles) damage reduction by type.
# Same as above, this is a percentage, 1 will disable damage from that source completely.
# entity_damage_reduction:
#   arrow: 0.5

# Set this to false to allow block-breaking with a wand
cancel_interact_on_left_click: true

# Set this to true if something went weird with wand right-clicks
cancel_interact_on_right_click: false

# Set this to false to disallow casting using an offhand wand
allow_offhand_casting: true

# Set this to true to allow casting a spell from an inventory using the drop button
# This does not work well in recent MC versions though because this action also sends
# an arm swing animation
allow_inventory_casting: false

# Set this to false to prevent selecting a spell from an inventory using right-click
allow_inventory_selection: true

# Set this to specify the time interval in ms that must pass between offhand casts
# this is meant to throttle the spammy behavior that happens if you hold right-click with an offhand wand
offhand_cast_cooldown: 500

# This is here to work around an MC bug which causes multiple equip events to fire when changing worlds
# Which can cause some unintended effects like changing spells or brushes when a wand inventory is open.
change_world_equip_cooldown: 1000

# How long to wait, in ms, before sending currency earn/spend messages
# This lets multiple spends in a short interval (such as with engineering magic) add up and show one message
currency_message_delay: 1000

# This can be used to fix compatibility with PerWorldInventory or other plugins that store players'
# inventories on world change.
# This makes sure wands close their inventory before players change worlds.
close_wand_on_world_change: false

# Turn this off to use normal damage. May be useful if you want
# direct damage spells to effect armor.
# This is incompatible with prevent_melee_damage: true!
use_magic_damage: true

# These default sounds are overridden by base_bound
wand_inventory_open_sound: magic.wandup,1,1
wand_inventory_cycle_sound: magic.paperturn,1,1
wand_inventory_close_sound: magic.wanddown,1,1
wand_no_action_sound: note_bass,1.0,0.7
wand_pickup_item_sound: entity_item_pickup,1,1

# If true, fill wands with all known spells on creation, and on every activation
fill_wands: false

# Max fill level to fill wands to
# 0 means put the max level of each spell on the wand,
# 1 would be only the level 1 versions
fill_wand_level: 0

# Set this to true to only fill wands with spells created by the player
# Useful in sandbox configs
fill_wand_creator: false

# Players can remove spells from their wands
allow_spell_dropping: false

# Prefer alternate modes for wand mechanics.
# Possible vales are:
# "none" : Does nothing, has no spell inventory
# "inventory" : The default, toggles the wand inventory in/out of your player inventory
# "chest" : Bring up a Wand inventory on right-click.
# "cycle" : Right-click will cycle to the next active spell (no inventory or icons)
default_wand_mode: none
# Options for brush mode are inventory and chest
# In inventory mode, brushes appear along with spells
# in Chest mode, shift+right-click to select a brush
default_brush_mode: chest
# The spell to cast on shift+right-click
brush_select_spell: brushselect
# This will make hitting the drop button over a wand while open change pages instead of
# cycling the hotbar
drop_changes_pages: true

# When wands are in "inventory" mode, players' inventories will be backed up
# so that if the server crashes it is not lost.
# You can turn this feature off by setting this to false.
backup_player_inventory: true

# The default wand, given when using "/wand"
default_wand: wand

# How to display Mana. Options are "bar", "number", "durability", "glow" and "none"
mana_display: bar

# How to display SP. Options are "number" and "none"
sp_display: number

# Set this to false to disable the Skill Point system completely.
sp_enabled: true

# Set this to false so players do not naturally earn Spell Points
sp_earn_enabled: true

# Set to false if you don't want SP items to automatically absorb on pickup
auto_absorb_sp: true

# The default cast location if not holding a wand. Options are "mainhand", "offhand" and "eyes"
default_cast_location: mainhand
# This offsets left or right from the center of the body
default_cast_location_offset: 0.5
# This offsets from the eyes, the result should be around the main hand location
default_cast_location_offset_vertical: -0.6
# How much we should lower down the cast location when a player is sneaking
sneaking_cast_location_offset_vertical: -0.15

# Control whether wands regenerate mana while they are not being held
regenerate_while_inactive: true

# A cooldown value in milliseconds between clicks. Mainly used to prevent Bukkit/MC double-event bugs.
click_cooldown: 150

# A cooldown preventing players from opening wands after opening a container
# This is used to combat lag-related exploits when opening a chest, and quickly opening a wand inventory, allowing
# players to put their spells in a chest.
open_cooldown: 500

# Whether or not allow players breaking locked containers they don't own
protect_locked: true

# Visible particle max range
# Decrease this if you find you have client or server performance issues
# Related to particle range
particle_range: 48

# How many casts to track in the undo queue
undo_depth: 128

# How many pending spells a player may have at one time
pending_depth: 64

# This can be used to enable auto-rollback for natural explosions
# from creepers, fireballs, TNT or other entities.
# Change the duration to a positive number (time to undo in ms) to enable this feature.
auto_rollback_duration: 0
auto_rollback_speed: 0.5
auto_rollback_explosions:
- creeper

# The largest thing we'll persist in the undo queue (to a file)
# This is specifically large enough to hold a Wolf House cast
# But most likely not a Wolf House self-destruct, or anything using overpowered Architect spells.
undo_max_persist_size: 200000

# How often to process batched spells.
# Anything higher than "1" in here may cause noticable delays for
# engineering spells, and in particular affect some blockchange-based PvP
# spells in a negative way
# If you want to tune down the amount of work Magic does, it is better
# to start with work_per_update below.
# Units of work are roughly defined as:
# 1 - Inspecting a block or other trivial action
# 5 - Modifying an entity
# 10 - Making block changes
work_frequency: 1

# How many units of work to perform per the interval defined above
work_per_update: 5000

# How often to "tick" a Mage. By default this is 4x per second
# This effects visual fill rate of XP, and visual/potion effects
# This value is in ticks
mage_update_frequency: 5

# How often to "tick" an Automaton, which is a virtual block that
# can cast spells, spawn mobs or produce effects.
# Decreasing this value may introduce some lag (though probably not)
automata_update_frequency: 10

# How long to exempt players from flight checks for each tick that
# they have a jump potion effect
# Set to 0 to disable exemption
jump_exemption: 5000

# How often to check for scheduled undo batches. Changing this will
# make the scheduled undo times less accurate, though they will
# always occur in the correct order
undo_frequency: 10

# Auto-commit player undo data when they logout.
# Enabling this can save memory, but it means you won't be able to Rollback
# or Rewind a player's constructions after they log out.
commit_on_quit: false

# Enable this to persists Mage data on mobs.
# This can generate quite a lot of save data if you have randomly spawning
# Mages, but it would also let you undo their spells after a restart.
save_non_player_mages: false

# Force any pending scheduled undo tasks to run on world save
# this will ensure the world reverts to normal in the event of
# a server crash.
undo_on_world_save: true

# When redstone is toggled, what block should replace? Note that air is glitchy
redstone_replacement: obsidian

#
# Control wands' "Power" settings
#
# Wands have a power (from 0-1) that will change the effects of many spells:
# - Direct-damage spells (arrow, disintegrate, shrink) will increase their damage
# - "Super" construction spells (the two-click variants) will allow for larger dimension selections
# - Radius-based spells (inferno, storm, blob, blast, arrowrain, mob) will have a larger radius,
#   generally meaning "more" of whatever they do. Be careful with this one.
# - Additionally, all spells will have a longer range.
# All of these aspects can be controlled individually.
# Be aware that a wand can be "overclocked", meaning it has a power greater than 1. Spell properties
# will continue to scale up. This will never happen naturally, only via the "wand configure" command
# or a wand template with a pre-defined power greater than 1
#
# There are hard max limits defined for range and radius for this reason.
#
max_power_damage_multiplier: 2.0
max_power_construction_multiplier: 3.0
max_power_radius_multiplier: 1.5
max_power_radius_multiplier_max: 2.0
max_power_range_multiplier: 2.0
max_power_range_multiplier_max: 5.0
max_power: 100.0
max_cost_reduction: 0.5
max_cooldown_reduction: 0.75

# These are used only for "Roman" display mode for mana on wand lore
max_mana: 1000
max_mana_regeneration: 100

# Debug EffectLib issues
debug_effects: false

# use this to make all hitboxes larger or smaller
# for targeting purposes.
# I find the vanilla ones all felt a little small, though I'm not sure why.
hitbox_scale: 1.75
hitbox_scale_y: 1.2
hitbox_sneaking_scale_y: 0.75

# This defines head radius in blocks, for entities that can have headshots
head_sizes:
  player: 0.2
  villager: 0.2
  skeleton: 0.2
  husk: 0.2
  zombie: 0.2
  vindicator: 0.2
  illusioner: 0.2
  evoker: 0.2
  enderman: 0.25
  giant: 4
  pig_zombie: 0.2
  blaze: 0.2
  creeper: 0.2
  witch: 0.2
  snowman: 0.2
  iron_golem: 0.2
  drowned: 0.2
  stray: 0.2
  pillager: 0.2
  illager: 0.2
  piglin: 0.2
  piglin_brute: 0.2
  wither_skeleton: 0.25
  wandering_trader: 0.2
  zombified_piglin: 0.2

# Entity-specific hitboxes for targeting purposes
# Magic uses the vanilla hitboxes by default, but you
# can override that per-entity here.
hitboxes:
   default: 1,1.6,1
#   player: 1.5,2,1.5
#   spider: 2, 1, 2
#   chicken: 1, 1, 1
#   rabbit: 1, 1, 1
#   silverfish: 1, 1, 1
#   bat: 1, 1, 1
#   slime: 2, 2, 2
#   magma_cube: 2, 2, 2
#   enderman: 1.5,3,1.5
#   ghast: 4,4,4
#   wither: 4,4,4
#   giant: 6,13,6
#   pig: 1.25, 1.25, 1.25
#   sheep: 1.25, 1.25, 1.25
#   cow: 1.5, 1.5, 1.5


# Some spells, like teleport and velocity based spells, will not function above max world height
# These can be configured per world type (nether, normal, the_end)
# The nether is here so we can specify the "roof" of the nether, which is 1/2 the actual world height
max_height:
  nether: 127

# This can be used to disable map animations. Best to just not give /mmap to people you don't trust, though.
enable_map_animations: true

# The maximum velocity we are allowed to apply to an entity
# If you're using Paper you may need to change this to 4.
max_velocity: 10

# Commands like /mgive and /wand will bind wands to players
bind_on_give: false

# Change this if you're hosting your own spell editor
editor_url: https://editor.elmakers.com

# This can be used for a server that is hooked up with a live editor
# The editor will update Magic/data/updated.yml, and the server will automatically
# reload configurations when the configs have changed.
config_update_interval: 0

# Set this to 0 to remove the in-game error notifications
# otherwise this value is in milliseconds, default is every 5 minutes
log_notify_interval: 300000

# This can be used to restrict the use of certain actions.
# Mainly intended for the sandbox configs.
restricted_spell_actions: []

# Set this to false to not drop any blocks if breaking a block that was magically modified
drop_original_block: true

# If using a local Bungee setup with symlinked player data folders, setting this to true
# will ensure that data is finished saving on one server before being loaded on the next.
use_file_locking: false

# If all else fails for whatever reason with file sharing and locking, you can simply delay data loading for some
# time. The longer you can delay it, the safer it'll be (this gives the source server time to finish saving)
# but there will be some time after a player logs in where their wands and magic will not work.
# This value is in milliseconds, so I would recommend setting it to 5000 (5 seconds)
file_load_delay: 0

# This delays logout by some amount of time. This can be useful when seeing issues with plugins that kill
# players on logout, which can happen after Magic has already processed player logout. In particular
# this might break Magic's "keep items on death" feature.
# Set this to 1 to fix this problem
logout_delay: 0

# You *may* also need to save data synchronously to ensure it is written out before releasing the file lock
# This is probably not necessary, but if you're still having issues try turning this to false
save_player_data_asynchronously: true

# This can be used to load one of the built-in localizations found in examples/localizations
# language: ES

# This can be used to change how wands interpret a "left click" or swing.
# This was an attempt to work around the recent MC behavior of triggering an arm swing event
# when dropping items, but it turns out interact events fire as well.
# So it did not work out, but if you want to try changing it you can.
# Options: animate, interact, animate_if_adventure
left_click_type: animate

# Set this to true to remove magic mobs on shutdown and chunk unload
despawn_magic_mobs: false

# Set this to true to remove invulnerable mobs on chunk load
# This may be needed to cleanup disconnected NPCs on older Spigot/Magic versions
# Hopefully it will not be needed any more, NPCs are automatically tagged and cleaned up as necessary
remove_invulnerable_mobs: false

# Set this to false to disallow wand commands modifying locked wands when used from the console or command blocks
console_bypass_locked_wands: true

# Set this to false to turn off all vanilla sounds by default
# They can be turned on/off for each effect using enable_vanilla_sounds on the effect config as well
enable_vanilla_sounds: true

# Set this to false if you have players who are stuck invisible.
# this may have been caused by a bug in previous versions of magic.
allow_player_persistent_invisibility: true

# Set this to false to prevent breaking paintings and item frames while holding a wand
wands_break_hanging: true
## Deprecated configuration options

# These hacks should not be required in 1.8 and up
# This enables the item drag event interceptor
enable_custom_item_hacks: false

# Wands will switch to chest mode when the player is in creative mode
wand_creative_chest_switch: false

# Used as a work-around for enchanting since the main item may not be enchantable (client-side).
# wand_item_enchantable: wood_sword
wand_item_enchantable:

# If set to non-zero, represents a time (in milliseconds) after which all spells will be reversed.
auto_undo: 0

# Throttle TNT explosions
# This is built-in to Spigot, so generally not needed here.
max_tnt_per_chunk: 0

# The default enchanting path.
# Paths should be defined per-wand, though this could be used to "update" old wands with no
# path to some specific path.
default_wand_path:

# Set this to false to not write default configs out to the defaults folder.
save_default_configs: true

# Whether wands can be upgraded on an enchanting table
# This does not affect spellshop-based progression, but rather wands progressing via vanilla
# enchantment mechanics, something that no longer works.
# This does note effect the "enchanting" property of wands, which lets them be enchanted
# just like a vanilla item.
enable_enchanting: false

# Whether wands can be combined on an anvil
enable_combining: false

# Wands will bind to the player when put in an anvil
enable_anvil_binding: false

# Whether renaming on an anvil will also clear the description
# In the future, it may be possible to change the description on
# an anvil.
anvil_rename_clears_description: false

# Whether or not using a wand on an anvil will organize its inventory
enable_organizing: false

# Players keep their wands when they die
# This is better confrolled via the "keep" property on wand configs.
keep_wands_on_death: false
### Economy Helpers

# These values are used to help create a balanced economy if you plan on selling wands, spells, or upgrades.
# Currently they are only visible on the Magic website, though I plan to incorporate them into the plugin in the near future.
# This will probably appear in the form of a "/magic sell <item>" command. This would work just like "/magic give <item>"
# except it would also give you the "worth" of the item as defined by your economy.

# This may be a simple chat message for balance-based economies (e.g. MSRP: $1,000), or it may
# give you physical items for an item-based economy. See the "worth_items" section below.

# The following modifiers affect wand pricing.
# A wand's price is calculated using the sum of the prices of all of its spells as a base.
# Wand properties  (mana, protection, etc) may also add value.
# Each of these values is multiplied by the wand property. Keep in mind that most properties naturally scale
# from 0-1, with some exceptions like mana regeneration and limits. Refer to the maximums set above (e.g. max_mana)
# for a good idea of how those values are going to scale.

# These numbers may look a little screwy,
# I was going for a base-2 kind of thing to hopefully make
# costs fall along even item stack limits. (64)

worth_use_multiplier: 0.125
worth_mana: 1
worth_mana_max: 100
worth_mana_regeneration: 800
worth_damage_reduction: 10000
worth_damage_reduction_explosions: 7000
worth_damage_reduction_falling: 3000
worth_damage_reduction_fire: 5000
worth_damage_reduction_physical: 5000
worth_damage_reduction_projectiles: 6000
worth_cost_reduction: 100000
worth_cooldown_reduction: 100000

# This can be used to change how selling items works, by default you get 50% of the item's worth for selling.
default_earn_scale: 0.5

# A wand may have additional value for each brush it contains
# Brushes are currently not able to have specific values, though this may be a future addition.
# Some brushes, like copy and clone, are tremendously more powerful than others, like dirt, and hence
# should be more valuable.
worth_brush: 32

# The following are added in if the wand has the specific property at all, they do not scale.
worth_effect_color: 2
worth_effect_particle: 4
worth_effect_sound: 8

# This will be used as a base multiplier for all values. Once spells and wand properties are balanced relative
# to each other (which will hopefully be the default...) you can use this to scale the overall worth of Magic
# items relative to the rest of your economy.
#
# If you have a default Gringott's install, you may want to change this to "0.01" to make the emeralds
# match up.
worth_base: 1

# Here you can define custom currencies
# These can be named in the "currency" section of messages.yml, see the potter example configs for details.
custom_currency: {}

# Here you can override the default values for builtin currencies like spell points and mana
builtin_currency:
  sp:
    default: 0
    max: 9999
    min: 0
    icon: skull:http://textures.minecraft.net/texture/ce6ed0a5f7e23bc3d34d73baa0b9c3f838e85014d2ff290801dc7486dd4da6
    worth: 10
  xp:
    worth: 10
    icon: skull:http://textures.minecraft.net/texture/ce6ed0a5f7e23bc3d34d73baa0b9c3f838e85014d2ff290801dc7486dd4da6
  item:
    icon: emerald
    item: emerald
    worth: 50
  currency:
    icon: skull:http://textures.minecraft.net/texture/de89b3131c1e346f44ae4779188984625486eea1c0ba8b69513aa92625557
    worth: 1
    has_decimals: true
    custom_formatting: false
  levels:
    icon: skull:http://textures.minecraft.net/texture/ce6ed0a5f7e23bc3d34d73baa0b9c3f838e85014d2ff290801dc7486dd4da6
    worth: 100
  health:
    icon: skull:http://textures.minecraft.net/texture/6b7da98ef45cf45185d21d61f5fa3d5966a3ee52273620a6e4dfd54cf99dbc
    worth: 1
  hunger:
    icon: skull:http://textures.minecraft.net/texture/1364e3f9597a295108d202d20c2f02539d5ad8377fef53ef622603a7f45b52f
    worth: 1
  mana:
    icon: skull:http://textures.minecraft.net/texture/ff78194bb5fe3f374ca6a1727c04247b7bac331cff248bf642acc8e73647e
    worth: 1

# This allows engineering spells to work with a custom currency instead
# of requiring the blocks to build.
# This only affects spells that use `consume: true`
# See the engineering configs for an example of use.
block_exchange:
  enabled: false
# This disables *all* enchanting, including vanilla
disable_enchanting: false

# This can be used to set up special right-click behaviors, a more generic version
# of the enchant_* configurations below.
spell_blocks: {}

# spell_blocks:
#   enchantment_table:
#     right_click: progressmenu
#     right_click_sneak: upgrades
#     requires_wand: true
#     requires_spell_progression: true

# This controls what players will see when interacting with an enchantment table
# These spells must exit in your configuration for this to work, and "enchant_block" needs to be set.
# enchant_click: progressmenu
# enchant_sneak_click: spellshop
enchant_click: ""
enchant_sneak_click: ""
enchant_click_requires_wand: true

# This can be used to set up a progression system based on clicking an enchant table with your wand.
# enchant_block: enchantment_table
enchant_block: ""

#
# These are examples that can be fetched via the `/mconfig fetch` command
#
external_examples:
  potterplus: "https://github.com/PotterPlus/PotterPlus/archive/master.zip"
  superheroes: "https://github.com/elBukkit/Magic-Superheroes/archive/main.zip"
  extramobs: "https://github.com/PhvntxmX/Magic-Bosses/archive/main.zip"
  mars: "https://github.com/elBukkit/Magic-Mars/archive/main.zip"
  pride: "https://github.com/elBukkit/Magic-Pride/archive/main.zip"
### Plugin Integration

# Add Magic NPC trait (/trait magic) to Citizens
enable_citizens: true

# Allow wands to be purchased on Essentials' signs, if present.
enable_essentials_signs: true

# Allow integration with LibsDisguises, spells can be restricted if disguised
enable_libsdisguises: true

# Update dynmap when constructing, if dynmap is present.
dynmap_update: true

# Show wands as dynmap markers, if dynmap is present
dynmap_show_wands: true

# Show spell casts as dynmap polylines, if dynmap is present
dynmap_show_spells: true

# Only show spell casts from players
dynmap_only_player_spells: false

# Enable worldguard protection against construction spells, and PVP
region_manager_enabled: true

# Enable Factions protection against construction spells
factions_enabled: true

# Enable PvPManager integration for PVP spells
pvp_manager_enabled: true

# Enable Towny integration for Build checks
towny_enabled: true

# All spells are allowed in the wilderness
towny_wilderness_bypass: true

# Enable GriefPrevention integration for Build checks
grief_prevention_enabled: true

# Enable PreciousStones integration for Build and PVP checks
precious_stones_enabled: true
# Players who can build in a field can cast ANY spell in that field,
# regardless of other region perms
precious_stones_override: true

# Enable NCP integration- set to false to disable Magic adding
# exemptions to players when casting spells. (e.g. survival_fly on brooms)
ncp_enabled: true

# Enable Lockette integration for Build checks
lockette_enabled: true

# Enable MVCore integration for PVP checks
multiverse_enabled: true

# Disable all build-related checks
bypass_build: false

# Disable all block-breaking checks
bypass_break: false

# Disable all pvp-related checks
bypass_pvp: false

# Set to "true" to ignore pvp_restricted on any spells
allow_pvp_restricted: false

# Will consider all spells as pvp spells
pvp_restricted: false

# Use scoreboard teams for friendly fire
# This will prevent players on the same scoreboard team from
# targeting each other with spells.
use_scoreboard_teams: false

# Use permissions to group players into teams for friendly fire
# If two players share a permission in a group, they are considered to be on a team.
# This can be a simple list of permissions, like
#
# permission_teams:
# - teams.team1
# - teams.team2
#
# or a more complicated grouping of factions, such as
# permission_teams:
# - - teams.jedi
#   - teams.rebels
# - - teams.sith
#   - teams.empire

# If not using scoreboard teams or Heroes parties, should players be "friends" by default?
# This will affect being able to cast healing or other perk type spells on other players.
# This does not affect targeting with normal (damaging, etc) spells.
default_friendly: true

### Heroes/Skills configuration

# Show Heroes skills in the /mskills menu, if Heroes is present
skills_use_heroes: true

# Use Heroes mana, if Heroes is present
use_heroes_mana: true

# Spells that don't bypass friendly fire will check Heroes' parties
use_heroes_parties: true

# Spells that don't bypass friendly fire will check SkillAPI allies
use_skillapi_allies: true

# Spells that don't bypass friendly fire will check BattleArena teams
use_battlearena_teams: true

# Use this to prefix skills added via the Magic skill pack
# This can be used to avoid conflicts with public or other skills
heroes_skill_prefix: ""

# Show all Magic spells the player has permission to cast in the /mskills menu
# This might make opening the skills menu lag if you have a lot of spells.
skills_use_permissions: false

### SkillAPI configuration
skillapi_enabled: true

# Use Skill API mana, if Skill API is present
use_skillapi_mana: false

# Allow magic placeholders in PlacerHolder API
placeholder_api_enabled: true

# Enable the Light action using Light API
light_api_enabled: true

# Set spawner data from spawner item in hand when placing
# This requires the Magic.spawners permission, which only ops have by default
# Turn this off if having issues with placing spawners. This is forced off if SilkSpawners is detected
apply_spawner_data: true

# MobArena integration
mobarena:
  # Use this to disable all MobArena integration
  enabled: true
  # Set this to true for magic build/break permissions to respect protected arenas
  protect: false
  # This can be used to protect specific arenas by name
  # protected:
  # - arena1
  # - arena2

# Skript integration will add cast events and effect
skript_enabled: true

# Engineering magic will be logged via LogBlock
logblock_enabled: true

# Residence integration
residence:
  # Set to false to disable Residence integration
  enabled : true

# RedProtect integration
redprotect:
  # Set to false to disable RedProtect integration
  enabled: true
  # Set these to allow non-players (command blocks, automata) to build/break in an RP region
  allow_non_player_build: false
  allow_non_player_break: false

# Citadel integration
citadel:
  # Set to false to disable Citadel integration
  enabled: true

  # Non-player reinforcements will be indestructible to spells
  reinforcements_indestructible: false

  # Player reinforcements will be indestructible to spells
  player_reinforcements_indestructible: false

  # Reinforcements will be taken into account in the BreakBlock action
  # Spells that use ModifyBlock to directly erase blocks will still be able to destroy
  # reinforced blocks, unless the above flags are set.
  reinforcement_durability: true

# Vault integration
vault:
  # Set to false to turn off Vault integration
  enabled: true

# ajParkour integration
ajparkour:
  # Set this to false to ignore parkour join events
  # This may cause item loss if using inventory mode wands
  enabled: true

# WildStacker integration
wildstacker:
  # This will cancel stack events for any custom mob spawns, which prevents magic mobs from stacking
  enabled: true

# Indirect integration with other protection plugins.
# Add a plugin here to have Magic send it fake Block/Break events to check for permission.
# This may have strange behavior, use with caution.
generic_protection: []

# The folder and file path to use for loading schematics. This will be relative to
# The server's /plugins folder.
# You can use WorldEdit's schematics folder for easy access to saved schematics.
# You can use this folder to override the built-in schematics, such as replacing the schematics
# used for Tent or Cage.
schematic_files: WorldEdit/schematics/
# This maps entity_type values to mob egg materials.
mob_eggs:
  bat: monster_egg,bat_spawn_egg
  bee: bee_spawn_egg
  blaze: monster_egg,blaze_spawn_egg
  cat: cat_spawn_egg
  cave_spider: monster_egg,cave_spider_spawn_egg
  chicken: monster_egg,chicken_spawn_egg
  cod_mob: monster_egg,cod_mob_spawn_egg
  cod: cod_spawn_egg
  cow: monster_egg,cow_spawn_egg
  creeper: monster_egg,creeper_spawn_egg
  dolphin: monster_egg,dolphin_spawn_egg
  donkey: monster_egg,donkey_spawn_egg
  drowned: monster_egg,drowned_spawn_egg
  elder_guardian: monster_egg,elder_guardian_spawn_egg
  enderman: monster_egg,enderman_spawn_egg
  endermite: monster_egg,endermite_spawn_egg
  evoker: monster_egg,evocation_illager_spawn_egg
  fox: fox_spawn_egg
  ghast: monster_egg,ghast_spawn_egg
  guardian: monster_egg,guardian_spawn_egg
  horse: monster_egg,horse_spawn_egg
  husk: monster_egg,husk_spawn_egg
  illusioner: monster_egg,vindication_illager_spawn_egg
  llama: monster_egg,llama_spawn_egg
  magma_cube: monster_egg,magma_cube_spawn_egg
  mooshroom: monster_egg,mooshroom_spawn_egg
  mule: monster_egg,mule_spawn_egg
  ocelot: monster_egg,ocelot_spawn_egg
  panda: panda_spawn_egg
  parrot: monster_egg,parrot_spawn_egg
  phantom: monster_egg,phantom_spawn_egg
  pillager: pillager_spawn_egg
  pig: monster_egg,pig_spawn_egg
  polar_bear: monster_egg,polar_bear_spawn_egg
  puffer_fish: monster_egg,puffer_fish_spawn_egg
  pufferfish: pufferfish_spawn_egg
  rabbit: monster_egg,rabbit_spawn_egg
  ravager: ravager_spawn_egg
  salmon: monster_egg,salmon_mob_spawn_egg
  sheep: monster_egg,sheep_spawn_egg
  shulker: monster_egg,shulker_spawn_egg
  silverfish: monster_egg,silverfish_spawn_egg
  skeleton_horse: monster_egg,skeleton_horse_spawn_egg
  skeleton: monster_egg,skeleton_spawn_egg
  slime: monster_egg,slime_spawn_egg
  spider: monster_egg,spider_spawn_egg
  squid: monster_egg,squid_spawn_egg
  stray: monster_egg,stray_spawn_egg
  trader_llama: trader_llama_spawn_egg
  tropical_fish: monster_egg,tropical_fish_spawn_egg
  turtle: monster_egg,turtle_spawn_egg
  vex: monster_egg,vex_spawn_egg
  villager: monster_egg,villager_spawn_egg
  vindicator: monster_egg,vindication_illager_spawn_egg
  wandering_trader: wandering_trader_spawn_egg
  witch: monster_egg,witch_spawn_egg
  wither_skeleton: monster_egg,wither_skeleton_spawn_egg
  wolf: monster_egg,wolf_spawn_egg
  zombie_horse: monster_egg,zombie_horse_spawn_egg
  pig_zombie: monster_egg,zombie_pigman_spawn_egg
  zombie: monster_egg,zombie_spawn_egg
  zombie_villager: monster_egg,zombie_villager_spawn_egg
# These are player skins that represent mobs. Some are provided here
# as official Mojang skins, but more can be added.
mob_skins:
  bat: MHF_Bat
  bee: MHF_Bee
  blaze: MHF_Blaze
  cat: http://textures.minecraft.net/texture/6b253fc6b656988453a2d7138fca4d1f2752f47691f0c434e432183771cfe1
  cave_spider: MHF_CaveSpider
  chicken: MHF_Chicken
  cod: http://textures.minecraft.net/texture/7892d7dd6aadf35f86da27fb63da4edda211df96d2829f691462a4fb1cab0
  cow: MHF_Cow
  creeper: MHF_Creeper
  dolphin: http://textures.minecraft.net/texture/8e9688b950d880b55b7aa2cfcd76e5a0fa94aac6d16f78e833f7443ea29fed3
  donkey: http://textures.minecraft.net/texture/63a976c047f412ebc5cb197131ebef30c004c0faf49d8dd4105fca1207edaff3
  drowned: MHF_Drowned
  elder_guardian: MHF_EGuardian
  enderman: MHF_Enderman
  endermite: MHF_Endermite
  evoker: MHF_Evoker
  fox: MHF_Fox
  ghast: MHF_Ghast
  guardian: MHF_Guardian
  hoglin: http://textures.minecraft.net/texture/9bb9bc0f01dbd762a08d9e77c08069ed7c95364aa30ca1072208561b730e8d75
  horse: http://textures.minecraft.net/texture/450f992599a55a8311373a5412716bb7f91cf39afadea2517f415d72879a2
  husk: MHF_Husk
  illusioner: http://textures.minecraft.net/texture/512512e7d016a2343a7bff1a4cd15357ab851579f1389bd4e3a24cbeb88b
  iron_golem: MHF_Golem
  llama: http://textures.minecraft.net/texture/c2b1ecff77ffe3b503c30a548eb23a1a08fa26fd67cdff389855d74921368
  magma_cube: MHF_LavaSlime
  mooshroom: MHF_MushroomCow
  mule: http://textures.minecraft.net/texture/a0486a742e7dda0bae61ce2f55fa13527f1c3b334c57c034bb4cf132fb5f5f
  ocelot: MHF_Ocelot
  panda: http://textures.minecraft.net/texture/dca096eea506301bea6d4b17ee1605625a6f5082c71f74a639cc940439f47166
  parrot: MHF_Parrot
  phantom: http://textures.minecraft.net/texture/746830da5f83a3aaed838a99156ad781a789cfcf13e25beef7f54a86e4fa4
  pig: MHF_Pig
  piglin: MHF_Piglin
  piglin_brute: http://textures.minecraft.net/texture/3e300e9027349c4907497438bac29e3a4c87a848c50b34c21242727b57f4e1cf
  pillager: http://textures.minecraft.net/texture/c4fe926922fbb406f343b34a10bb98992cee4410137d3f88099427b22de3ab90
  polar_bear: http://textures.minecraft.net/texture/c4fe926922fbb406f343b34a10bb98992cee4410137d3f88099427b22de3ab90
  pufferfish: MHF_Pufferfish
  rabbit: MHF_Rabbit
  ravager: http://textures.minecraft.net/texture/cd20bf52ec390a0799299184fc678bf84cf732bb1bd78fd1c4b441858f0235a8
  salmon: http://textures.minecraft.net/texture/8aeb21a25e46806ce8537fbd6668281cf176ceafe95af90e94a5fd84924878
  sheep: MHF_Sheep
  shulker: MHF_Shulker
  silverfish: MHF_Silverfish
  skeleton: MHF_Skeleton
  skeleton_horse: http://textures.minecraft.net/texture/47effce35132c86ff72bcae77dfbb1d22587e94df3cbc2570ed17cf8973a
  slime: MHF_Slime
  snowman: http://textures.minecraft.net/texture/8e8d206f61e6de8a79d0cb0bcd98aced464cbfefc921b4160a25282163112a
  spider: MHF_Spider
  squid: MHF_Squid
  stray: MHF_Stray
  strider: MHF_Strider
  trader_llama: http://textures.minecraft.net/texture/8424780b3c5c5351cf49fb5bf41fcb289491df6c430683c84d7846188db4f84d
  tropical_fish: http://textures.minecraft.net/texture/d6dd5e6addb56acbc694ea4ba5923b1b25688178feffa72290299e2505c97281
  turtle: MHF_Turtle
  vex: MHF_Vex
  villager: MHF_Villager
  vindicator: http://textures.minecraft.net/texture/6deaec344ab095b48cead7527f7dee61b063ff791f76a8fa76642c8676e2173
  witch: MHF_Witch
  wither: MHF_Wither
  wither_skeleton: MHF_WSkeleton
  wolf: MHF_Wolf
  zoglin: http://textures.minecraft.net/texture/e67e18602e03035ad68967ce090235d8996663fb9ea47578d3a7ebbc42a5ccf9
  zombie: MHF_Zombie
  zombie_horse: http://textures.minecraft.net/texture/d22950f2d3efddb18de86f8f55ac518dce73f12a6e0f8636d551d8eb480ceec
  zombie_pigman: MHF_PigZombie
  zombie_villager: http://textures.minecraft.net/texture/e5e08a8776c1764c3fe6a6ddd412dfcb87f41331dad479ac96c21df4bf3ac89c
  zombified_piglin: http://textures.minecraft.net/texture/7eabaecc5fae5a8a49c8863ff4831aaa284198f1a2398890c765e0a8de18da8c

  # For pre-1.13 versions
  mushroom_cow: MHF_MushroomCow
  pig_zombie: MHF_PigZombie
# These define mappings of materials for backwards compatibility
ground_sign_block: oak_sign,sign_post,sign
wall_sign_block: oak_wall_sign,wall_sign
firework: firework,firework_rocket
wall_torch: wall_torch,torch
redstone_torch_on: redstone_torch_on,redstone_torch:1
redstone_torch_off: redstone_torch_on,redstone_torch:0
redstone_wall_torch_on: redstone_torch_on,redstone_wall_torch:4
redstone_wall_torch_off: redstone_torch_on,redstone_torch:0
mob_spawner: spawner,mob_spawner
filled_map: filled_map,map
nether_portal: nether_portal,portal
writable_book: writable_book,book_and_quill
# This resource pack will automatically be used if none is defined in your server.properties
# Set this to "" if you have some other plugin or Bungee managing resource packs.
resource_pack: "https://www.dropbox.com/s/o7q6giv822mc7c1/hhh.zip?dl=0"

# Use this to turn off all resource pack functionality
enable_resource_pack: true

# This will delay sending resource packs to players. This can mitigate issues with the vanilla
# client timing out on connect due to RP processing on potato computers.
# This value is in milliseconds.
# Set this to 0 to set resource packs immediately on join.
resource_pack_delay: 200

# Delay the RP login prompt so players can see it
resource_pack_prompt_delay: 2000

# Set this to true to turn on the player skull-based spell icons
# This may be needed if you have disabled the RP, spell icons are in the RP.
url_icons_enabled: false

# This should get set automatically based on your version, but if you want to override this
# you can.
# This will use the "legacy_icon" field in wands and spells, which generally use damage-based
# icons rather than custom model data icons
legacy_icons_enabled: false

# Set this to allow Magic to periodically check for updates to the resource pack.
# Setting this to false is the same as setting resource_pack_check_interval to 0.
enable_resource_pack_check: true

# Set this to zero to turn off periodic RP update checks. The default is every five minutes.
# This is done in a separate thread to avoid interfering with the main server thread.
# Note that this value is in minutes!
resource_pack_check_interval: 5

# Set this to true, and resource packs will not be sent to payers on join, instead they will be prompted
# It is not really recommended to use this anymore, the default behavior will prompt players and allow them
# to control their own RP behaviors.
resource_pack_prompt: false

# Similar to the above command, this turns automatic resource packs off by default
# Players can turn it back on using `/getrp auto`
# They will be prompted at login with the "resource_pack.off_prompt" message, which by default
# Goes to the action bar and will tell them to use `/getrp`
resource_pack_default_auto: true

# Alternate resource packs can be accessed with /getrp <pack>
alternate_resource_packs:
  borders:
    url: "http://rp.elmakers.com/Magic-potter-RP-8.5-1.16.zip"
  painterly:
    url: "http://rp.elmakers.com/Magic-painterly-RP-8.5-1.16.zip"
  lowres:
    url: "http://rp.elmakers.com/Magic-lowres-RP-8.5-1.16.zip"
  hires:
    url: "http://rp.elmakers.com/Magic-hires-RP-8.5-1.16.zip"
  skulls:
    url: "http://rp.elmakers.com/Magic-skulls-RP-8.5-1.16.zip"
    url_icons_enabled: true
  survival:
    url: "http://rp.elmakers.com/Magic-RP-8.5-1.16.zip"
# This defines which Materials make up skulls, used for backwards-compatibility
skulls:
  skeleton:
    wall: skeleton_wall_skull, skull:0
    ground: skeleton_skull, skull:0
    item: skeleton_skull, skull_item:0
  wither_skeleton:
    wall: wither_skeleton_wall_skull, skull:1
    ground: wither_skeleton_skull, skull:1
    item: wither_skeleton_skull, skull_item:1
  zombie:
    wall: zombie_wall_head, skull:2
    ground: zombie_head, skull:2
    item: zombie_head, skull_item:2
  player:
    wall: player_wall_head, skull:3
    ground: player_head, skull:3
    item: player_head, skull_item:3
  creeper:
    wall: creeper_wall_head, skull:4
    ground: creeper_head, skull:4
    item: creeper_head, skull_item:4
  ender_dragon:
    wall: dragon_wall_head, skull:5
    ground: dragon_head, skull:5
    item: dragon_head, skull_item:5
world_modification:
  # Spawn reasons that will be ignored by world spawn processing rules
  ignore_spawn_reasons:
    - CUSTOM
    - EGG
    - SPAWNER
    - SPAWNER_EGG
